{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { INITIAL_STATE } from \"./state\";\nvar basketSlice = createSlice({\n  name: \"basket\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    add: function add(state, action) {\n      // add item to basket using `state` and `action` props\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: true\n        });\n      });\n    },\n    remove: function remove(state, action) {\n      return state.map(function (item) {\n        if (item.id !== action.payload.id) {\n          return item;\n        }\n\n        return _objectSpread({}, item, {\n          added: false\n        });\n      });\n    }\n  }\n});\nvar store = configureStore({\n  reducer: basketSlice.reducer\n});\nvar _basketSlice$actions = basketSlice.actions,\n    add = _basketSlice$actions.add,\n    remove = _basketSlice$actions.remove;\nexport { add, remove };\nexport { basketSlice, store };","map":{"version":3,"sources":["/home/shamaz/web root/2020 bootcamp/projects/9a/store/store.ts"],"names":["createSlice","configureStore","INITIAL_STATE","basketSlice","name","initialState","reducers","add","state","action","map","item","id","payload","added","remove","store","reducer","actions"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,IAAMC,WAAW,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,QADwB;AAE9BC,EAAAA,YAAY,EAAEH,aAFgB;AAG9BI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,EAAE,aAACC,KAAD,EAAQC,MAAR,EAAmB;AACtB;AACK,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACpB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAID,OATG,CAAP;AAUN,KAbO;AAcRC,IAAAA,MAAM,EAAE,gBAACP,KAAD,EAAQC,MAAR,EAAmB;AACnB,aAAOD,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI,EAAI;AACrB,YAAIA,IAAI,CAACC,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA/B,EAAmC;AACjC,iBAAOD,IAAP;AACD;;AAED,iCACKA,IADL;AAEEG,UAAAA,KAAK,EAAE;AAFT;AAGD,OARI,CAAP;AASC;AAxBD;AAHoB,CAAD,CAA/B;AA+BA,IAAME,KAAK,GAAGf,cAAc,CACxB;AACIgB,EAAAA,OAAO,EAAEd,WAAW,CAACc;AADzB,CADwB,CAA5B;2BAKmCd,WAAW,CAACe,O;IAA5BX,G,wBAAAA,G;IAAKQ,M,wBAAAA,M;;AACxB,SAASZ,WAAT,EAAsBa,KAAtB","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport { INITIAL_STATE } from \"./state\";\n\nconst basketSlice = createSlice({\n  name: \"basket\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    add: (state, action) => {\n      // add item to basket using `state` and `action` props\n           return state.map(item => {\n                if (item.id !== action.payload.id) {\n                  return item\n                }\n        \n                return {\n                  ...item,\n                  added: true\n                }\n              })\n    },\n    remove: (state, action) => {\n            return state.map(item => {\n                if (item.id !== action.payload.id) {\n                  return item\n                }\n        \n                return {\n                  ...item,\n                  added: false     }\n              })\n            }\n  },\n});\n\nconst store = configureStore(\n    { \n        reducer: basketSlice.reducer \n    });\n\n    export const { add, remove } = basketSlice.actions\nexport { basketSlice, store };\n"]},"metadata":{},"sourceType":"module"}